snippet bash
abbr #!/bin/bash
options head
alias sb
	#!/bin/bash
	${0:TARGET}

snippet bashd
abbr #!/bin/bash;#@(#)
options head
alias sbd
	#!/bin/bash
	# @(#)${1:#:Descriptions}
	# @(#)Usage: \$0 ${2:#:Options}
	${0:TARGET}

snippet als
abbr bash alias
options head
  alias ${1:#:name}='${0:TARGET}'

snippet getoptsfunction
abbr build-in getopts (for bash function)
alias gosf
option head
  OPTIND_OLD="$OPTIND"
  OPTIND=1
  usage () {
    echo "Usage: " 1>&2
  }
  while getopts ${1:h} OPT
  do
    case "$OPT" in
      ${2:#:OPT})
        ${0:#:process}
        ;;
      h)
        usage
        return 0
        ;;
      ?)
        echo "ERROR: Undifined option." 1>&2
        usage
        return 1
        ;;
    esac
  done
  shift $((OPTIND - 1))
  OPTIND="$OPTIND_OLD"
}

snippet getoptsscript
abbr build-in getopts (for script files)
alias goss
option head
  Usage () {
    what "\$0" | sed "s/\\$0/$SCRIPTNAME/" 1>&2
  }
  while getopts ${1:h} OPT
  do
    case "$OPT" in
      ${2:#:OPT})
        ${0:#:process}
        ;;
      h)
        Usage
        exit 0
        ;;
      ?)
        echo "$SCRIPTNAME: ERROR - Undifined option." 1>&2
        Usage
        exit 1
        ;;
    esac
  done
  shift $((OPTIND - 1))

snippet getoptfuncrion
abbr long opt, post opt (function)
alias gof
  usage () {
    echo "Usage: " 1>&2
    return
  }
  declare -i argc=0
  declare -a argv=()

  while (( $# > 0 ))
  do
    case "\$1" in
      -*)
        if [[ "\$1" =~ '${1:#:option}' ]]; then
          pflag='-p'
        fi
        shift${2:# 2}
        ${0}
        ;;
      *)
        ((++argc))
        argv=("${argv[@]}" "\$1")
        shift
        ;;
    esac
  done
  
snippet getoptscript
abbr long opt, post opt (script)
alias gos
  Usage () {
    what "$0" | sed "s/\$0/$SCRIPTNAME/" 1>&2
  }
  declare -i argc=0
  declare -a argv=()

  while (( $# > 0 ))
  do
    case "\$1" in
      -*)
        if [[ "\$1" =~ '${1:#:option}' ]]; then
          pflag='-p'
        fi
        shift${2:# 2}
        ${0}
        ;;
      *)
        ((++argc))
        argv=("${argv[@]}" "\$1")
        shift
        ;;
    esac
  done

snippet     whileread
abbr        while read (array)
  while read ${1:array}
  do
    ${0:}
  done

snippet     12
abbr        1>&2 #redir stdout to error stdout
  1>&2

snippet     12n
abbr        >& /dev/null
  >& /dev/null

snippet     echo2
abbr        echo ${0:#:text} 1>&2
alias        e2
  echo "${0:#:text}" 1>&2

snippet     );;
abbr        [char])*;;
  ${1:#:char})
  ${0:TARGET}
    ;;

snippet     #@
abbr        # @(#) (Descriptions of script)
  # @(#)
